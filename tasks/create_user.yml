- name: ensure existence of user
  user:
    name: '{{ user_access_username }}'
    shell: '{{ user_access_shell }}'

- name: ensure existence of SSH directory
  file:
    path: /home/{{ user_access_username }}/.ssh
    state: directory
    owner: '{{ user_access_username }}'
    group: '{{ user_access_username }}'
    mode: 700

- name: add public key to authorized keys
  authorized_key:
    user: '{{ user_access_username }}'
    key: '{{ lookup("file", user_access_ssh_public_key) }}'
    key_options: '{{ user_access_ssh_public_key_options | default(omit)}}'
  when: hostvars["man"] is defined

- name: set password if defined
  user:
    name: '{{ user_access_username }}'
    password: '{{ user_access_password | password_hash("sha512") }}'
  when: user_access_password is defined and user_access_password

- name: Add ChallengeResponse and PasswordAuthentication config
  blockinfile:
    path: /etc/ssh/sshd_config.d/99-challenge-password-auth.conf
    create: yes
    block: |
      ChallengeResponseAuthentication yes
      PasswordAuthentication yes
  when: user_access_password is defined and user_access_password
  notify: Reload SSH service

- name: Remove ChallengeResponseAuthentication from main sshd_config
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^ChallengeResponseAuthentication'
    state: absent
  notify: Reload SSH service

- name: Remove PasswordAuthentication from main sshd_config
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^#?PasswordAuthentication'
    state: absent
  when: user_access_password is defined and user_access_password
  notify: Reload SSH service

- name: grant sudo if defined
  lineinfile:
    dest: /etc/sudoers
    regexp: '^{{ user_access_username }}'
    line: '{{ user_access_username }} ALL=(ALL) NOPASSWD: ALL'
    validate: 'visudo -cf %s'
  when: user_access_sudo
